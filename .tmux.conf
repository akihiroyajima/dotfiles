# ======================================================================
# Tmux Package Manager
# ======================================================================

set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
  tmux-plugins/tmux-resurrect      \
  tmux-plugins/tmux-continuum      \
  tmux-plugins/tmux-pain-control   \
'
run-shell '~/.tmux/plugins/tpm/tpm'

# ======================================================================
# Status bar
# ======================================================================

# Place the status bar at the top
# set-option -g status-position top

# Default statusbar colors
set-option -g status-fg blue
set-option -g status-bg black
set-option -g status-attr bright

# Default window title colors
set-window-option -g window-status-fg blue
set-window-option -g window-status-bg default
set-window-option -g window-status-attr default

# Active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-attr default

# It determine the length of the left and right of the status bar
set-option -g status-left-length 32
set-option -g status-right-length 150

# #H => Machine name
# #P => Number of pane
# View on the left-most
set-option -g status-left '#H:[#P]'

# Remaining battery capacity, Current time
# View on the right-most
set-option -g status-right '[%Y-%m-%d(%a) %H:%M]'

# Status bar in UTF-8
set-option -g status-utf8 on

# Re-draw the status bar every second
set-option -g status-interval 1

# Status bar in centre
set-option -g status-justify centre

set -g window-status-format ' #I: #W '
set -g window-status-current-format ' #I: #W '

# Prefix key
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Reload
unbind r
bind r source-file ~/.tmux.conf \; display 'Configuration Reloaded!'

# Zsh
set-option -g default-shell /bin/zsh

# Vi key bind
set-window-option -g mode-keys vi

# To start a number of windows and panes from 1 (default 0)
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Prefix+v is copy mode start
bind-key v copy-mode \; display 'Copy mode!'

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Prefix+p is paste
bind-key p paste-buffer

# To release a copy of the reversal in the Esc key (copy mode it will not come out)
bind-key -t vi-copy Escape clear-selection
# To release a copy of the reversal in the Ctrl-c key, exit from copy mode
bind-key -t vi-copy C-c cancel

bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy V select-line
bind-key -t vi-copy w next-word
bind-key -t vi-copy e next-word-end
bind-key -t vi-copy b previous-word
bind-key -t vi-copy g top-line
bind-key -t vi-copy G bottom-line
bind-key -t vi-copy / search-forward
bind-key -t vi-copy ? search-backward
bind-key -t vi-copy C-n page-up
bind-key -t vi-copy C-f page-down
bind-key -t vi-copy C-u scroll-up
bind-key -t vi-copy C-d scroll-down

# Set the reattach-to-user-namespace to the default-command
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

# Session switching
bind-key [ switch-client -p
bind-key ] switch-client -n

# Split window
bind-key | split-window -h
bind-key - split-window -v

# Select window
bind -n S-left select-window -t :-
bind -n S-right select-window -t :+

# Select pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Resize pane
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Open a new window in the current directory
bind c new-window -c '#{pane_current_path}'
bind | split-window -hc '#{pane_current_path}'
bind - split-window -vc '#{pane_current_path}'

# Move while rotation the pane Ctrl-o
bind-key -n C-o select-pane -t :.+

# Enable the mouse
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Tmux ressurect
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'irb pry "~rails server" "~rails console"'
